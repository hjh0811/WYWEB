<?xml version="1.0" encoding="utf-8"?>
<framework:BaseWidget xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:framework="cn.framework.*"
					  xmlns:s="library://ns.adobe.com/flex/spark" creationComplete="init()" fontSize="12"
					  xmlns:mx="library://ns.adobe.com/flex/mx"  width="100%" height="100%" xmlns:components="cn.framework.components.*" fontFamily="宋体">
	<fx:Script>
		<![CDATA[
			import cn.framework.components.InfoPopup;
			
			import com.esri.ags.Graphic;
			import com.esri.ags.geometry.MapPoint;
			import com.esri.ags.geometry.Polyline;
			import com.esri.ags.layers.GraphicsLayer;
			import com.esri.ags.symbols.SimpleLineSymbol;
			import com.esri.ags.symbols.SimpleMarkerSymbol;
			import com.esri.ags.utils.JSONUtil;
			
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			
			import spark.filters.GlowFilter;
			
//			private var pathPoints:Array = [{name:"坪石镇",x:113.054831,y:25.282028},{name:"金鸡岭",x:113.051267,y:25.288054},{name:"7011风景区",x:113.074009,y:25.274176}];
			private var pathPointGraphicsLayer:GraphicsLayer = new GraphicsLayer;
			
			private var paths:Array = [];
			private var pathGraphicsLayer:GraphicsLayer = new GraphicsLayer;
			
			[Bindable]
			private var recAC:ArrayCollection = new ArrayCollection;
			[Bindable]
			private var dictionary:Dictionary = new Dictionary;
			
			private function init():void
			{
				pathGraphicsLayer.id ="pathlayer";
				pathPointGraphicsLayer.id="pathpointlayer";
				this.map.addLayer(pathGraphicsLayer);
				this.map.addLayer(pathPointGraphicsLayer);
				
				var httpservice:HTTPService = new HTTPService;
				httpservice.url = "cn/framework/widgets/RouteWidget.xml";
				httpservice.addEventListener(ResultEvent.RESULT,configHandler);
				httpservice.resultFormat = "e4x";
				httpservice.send();
				

			}
			
			private function configHandler(event:ResultEvent):void
			{
				    var xml:XML = event.result as XML;
				    
					var routeXMLlist:XMLList = xml.routes.path;
					
					for each(var routeXML:XML in routeXMLlist)
					{
						var jsonPath:String = routeXML;
						var pathID:String = routeXML.@id;
						this.dictionary[pathID] = jsonPath;
					}
					var nodes:XMLList = xml.node; 
					for each(var xl:XML in nodes)
					{
						var json:String = xl;
						var object:Object = {title:xl.@name,pathID:xl.@path,json:json};
						this.recAC.addItem(object);
					}
			}
			
			private function mouseOverHandler(event:MouseEvent):void
			{
				var graphic:Graphic = event.currentTarget as Graphic;
				var glow:spark.filters.GlowFilter = new spark.filters.GlowFilter();
				glow.blurX =15;
				glow.blurY =15;
				glow.color  = 0x00ffff;
				glow.alpha = 1;
				graphic.filters = [glow];
				graphic.useHandCursor =true;
				graphic.buttonMode = true;
				
			}
			
			
			private function mouseClickhandler(event:MouseEvent):void
			{
				var graphic:Graphic = event.currentTarget as Graphic;
				var infoPop:InfoPopup = new InfoPopup;
				infoPop.map =this.map;
				this.map.addChild(infoPop);
				infoPop.infoData = {title:graphic.attributes.name, content:"旅游景点",point:graphic.geometry as MapPoint};
			}

			protected function zoomToDetail(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				pathPointGraphicsLayer.clear();
				pathGraphicsLayer.clear();
				
				var infoData:Object=event.currentTarget.infoData;
				
				
				var pathID:String = infoData.pathID;
				var routeStr:String = this.dictionary[pathID];
				
				
				if(routeStr!=null)
				{
									var routeGra:Graphic = new Graphic;
								    routeGra.geometry = Polyline.fromJSON(JSONUtil.decode(routeStr));
									routeGra.symbol = new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID,0xffff00,1,5);
									this.pathGraphicsLayer.add(routeGra);
									
									this.map.zoomTo(routeGra.geometry);
									
									var glow:spark.filters.GlowFilter = new spark.filters.GlowFilter();
									glow.blurX =15;
									glow.blurY =15;
									glow.color  = 0x00ffff;
									glow.alpha = 1;
									routeGra.filters = [glow];
				}
				
				var json:String = infoData.json;
				
				var pathPoints:Array = JSON.parse(json) as Array;
				
								for each(var obj:Object in pathPoints)
								{
									var graphic:Graphic = new Graphic;
									var mappoint:MapPoint = new MapPoint;
									mappoint.x = obj.x;
									mappoint.y = obj.y;
									graphic.geometry = mappoint;
									graphic.symbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.STYLE_CIRCLE,10,0xff0000,1,0,0,0);
									graphic.addEventListener(MouseEvent.MOUSE_OVER, mouseOverHandler);
									graphic.addEventListener(MouseEvent.CLICK, mouseClickhandler);
									graphic.attributes = {name:obj.name};
									this.pathPointGraphicsLayer.add(graphic);
								}				
				
			}

		]]>
	</fx:Script>
	<mx:Panel width="100%" height="100%" paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0"  borderStyle="solid" borderThickness="1" borderThicknessBottom="0" borderThicknessLeft="0" borderThicknessRight="0" borderThicknessTop="0" headerColors="[0xFFF9E8,0xFFF5E4]"   title="旅游路线" cornerRadius="0">
		<mx:Repeater id="wRepeater" dataProvider="{recAC}">
			<components:RoutePanel infoData="{wRepeater.currentItem}" click="zoomToDetail(event)"/>
		</mx:Repeater>
	</mx:Panel>
</framework:BaseWidget>