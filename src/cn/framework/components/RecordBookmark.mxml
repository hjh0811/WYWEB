<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
// Copyright © 2008 ESRI
//
// All rights reserved under the copyright laws of the United States.
// You may freely redistribute and use this software, with or
// without modification, provided you include the original copyright
// and use restrictions.  See use restrictions in the file:
// <install location>/FlexViewer/License.txt
//
////////////////////////////////////////////////////////////////////////////////
-->
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:flash="flash.filters.*" width="100%" minHeight="40" styleName="RecordCanvas" backgroundAlpha="0.3"
		  backgroundColor="#8BC9F8" paddingLeft="3" paddingRight="3" mouseOver="mouseOverRow()" mouseOut="mouseOutRow()" verticalAlign="middle">

	<mx:Script>
		<![CDATA[
			import com.esri.ags.Graphic;
			import com.esri.ags.geometry.Polyline;
			import com.esri.ags.Map;
			import com.esri.ags.geometry.Extent;
			import com.esri.ags.geometry.MapPoint;
			import com.esri.ags.geometry.Polygon;
			
			import mx.core.Application;
			[Bindable]
			public var recid:int;

			[Bindable]
			private var recicon:String="assets/images/i_draw2.png";

			[Bindable]
			private var title:String;

			[Bindable]
			private var content:String;

			private const BOOKMARK_DELETE:String="bookmarkDelete";
			private const BOOKMARK_CENTER:String="bookmarkCenter";

			private var _bookmark:Object;
			
			private var _map:Map;

			public function get bookmark():Object
			{
				return _bookmark;
			}

			public function set bookmark(value:Object):void
			{
				_bookmark=value;
				//recicon = bookmark.recicon;
				var gra:Graphic = bookmark as Graphic
//				title=(bookmark as Graphic).name.replace("Graphic","图形");
				if(gra.geometry is Polygon || gra.geometry is Extent)
				{
					title="面数据";
				}
				else if(gra.geometry is MapPoint)
				{
					title="点数据";
				}
				else if(gra.geometry is Polyline)
				{
					title="线数据";
				}
					
					
//				content=bookmark.content;
				//content = bookmark.xmin + " " + bookmark.ymin + " " + bookmark.xmax + " " + bookmark.ymax;
			}
			
			private function center(event:MouseEvent):void
			{
				event.stopPropagation();
				dispatchEvent(new Event(BOOKMARK_CENTER, false));
			}

			private function mouseOverRow():void
			{
				this.setStyle("backgroundAlpha", 0.8);
			}

			private function mouseOutRow():void
			{
				this.setStyle("backgroundAlpha", 0.3);
			}

			private function deleteBookmark(event:MouseEvent):void
			{
				event.stopPropagation();
				dispatchEvent(new Event(BOOKMARK_DELETE, false));
			}
			private function exportBookmark(event:MouseEvent):void
			{
				event.stopPropagation();
				dispatchEvent(new Event("bookmarkExport", false));
			}
		]]>
	</mx:Script>

	<mx:Image id="recIcon" source="{recicon}" width="20" height="20" click="center(event)">
		<!--<mx:filters>
			<flash:GlowFilter color="#000000" alpha="0.5" blurX="10" blurY="10"/>
		</mx:filters>-->
	</mx:Image>
	<mx:VBox verticalGap="0" width="90%"  useHandCursor="true" buttonMode="true" click="center(event)">
		<mx:VBox verticalGap="0" width="100%" mouseChildren="false" useHandCursor="true" buttonMode="true">
			<mx:Text selectable="false" styleName="RecordText" fontWeight="bold" text="{title}" width="90%"/>
		</mx:VBox>
	</mx:VBox>
	<mx:HBox paddingRight="15" verticalAlign="middle">
	<mx:Image source="assets/buttons/save.png" click="exportBookmark(event)" useHandCursor="true" buttonMode="true" toolTip="保存成坐标文件"/>
	<mx:Image id="recDelete" source="assets/images/edit_cancel.png" click="deleteBookmark(event)" useHandCursor="true" buttonMode="true" toolTip="删除"/>
	</mx:HBox>

	<mx:Metadata>
    	[Event(name="bookmarkDelete", type="flash.events.Event")]
    	[Event(name="bookmarkCenter", type="flash.events.Event")]
		[Event(name="bookmarkExport", type="flash.events.Event")]
    </mx:Metadata>

</mx:HBox>
